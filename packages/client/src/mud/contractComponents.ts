/* Autogenerated file. Do not edit manually. */

import { TableId } from "@latticexyz/utils";
import { defineComponent, Type as RecsType, World } from "@latticexyz/recs";

export function defineContractComponents(world: World) {
  return {
    Administrator: (() => {
      const tableId = new TableId("", "Administrator");
      return defineComponent(
        world,
        {
          value: RecsType.String,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    Config: (() => {
      const tableId = new TableId("", "Config");
      return defineComponent(
        world,
        {
          maxProjectId: RecsType.String,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    Project: (() => {
      const tableId = new TableId("", "Project");
      return defineComponent(
        world,
        {
          owner: RecsType.String,
          fundToken: RecsType.String,
          fundTarget: RecsType.BigInt,
          fundedSum: RecsType.BigInt,
          fundingPeriod: RecsType.BigInt,
          withdrawalPeriod: RecsType.BigInt,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    ProjectInfo: (() => {
      const tableId = new TableId("", "ProjectInfo");
      return defineComponent(
        world,
        {
          name: RecsType.String,
          imageUri: RecsType.String,
          description: RecsType.String,
          uri: RecsType.String,
          demoUri: RecsType.String,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    ProjectDonator: (() => {
      const tableId = new TableId("", "ProjectDonator");
      return defineComponent(
        world,
        {
          amounts: RecsType.BigIntArray,
          walletAddress: RecsType.StringArray,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
    Donator: (() => {
      const tableId = new TableId("", "Donator");
      return defineComponent(
        world,
        {
          amounts: RecsType.BigInt,
        },
        {
          metadata: {
            contractId: tableId.toHexString(),
            tableId: tableId.toString(),
          },
        }
      );
    })(),
  };
}
